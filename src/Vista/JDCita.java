package Vista;

import DAO.DAOException;
import DAO.DAOManager;
import DAOMySQL.MySQLDAOManager;
import Modelo.Cita;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
/**
 * @authors Alanstark & DiegoRoque
 */
public class JDCita extends javax.swing.JDialog {
    //creamos un objeto del tipo interface ICitaDAO
        private DAOManager manager = null;
        
        //formato de fechas
        SimpleDateFormat mySympleDateFormat = new SimpleDateFormat("yyyy-MM-dd");
        
        //campos para almacenar los datos del formulario
        private int idCita;
        private String motivoCita;
        private int idPaciente;
        private Date fecha;//guarda lo que se obtiene del calendario
        private java.sql.Date fechaCita;
        
    /**
     * Creates new form JDCita
     */
    public JDCita(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        //limpiarFormulario();
        this.manager = new MySQLDAOManager();//propiedad para manejar nuestros DAO
    }
     /**
     * Este método permite limpiar el formulario y ubicar el focus en la caja 
     * de texto fecha de la cita
     **/
    private void limpiarFormulario(){
        //asignamos el string -1 a la caja de texto del id.Cita 
        txtIdCita.setText("-1");
        
        //limpiamos las otras cajas de texto 
        txtMotivoCita.setText("");
        txtIdPaciente.setText("");
        //ubicamos el focus en la caja de texto donde elige la fecha
        
        //limpiando el jdcDate
        ((JTextField)jdcFechaCita.getDateEditor().getUiComponent()).setText("");
        //jdcFechaCita.setDate(new Date());//esta instruccion nos pondria la fecha de hoy pero, no la necesitamos 
        txtBuscarPorId.setText("");
        jdcFechaCita.requestFocusInWindow();
    }//fin del método limpiar formulario
    
    /**
     * Valida los datos de entrada del formulario
     * @return true si todos son validados correctamente,false en caso contrario  
     */
    private boolean validar(){
        boolean validacion = false;
        idCita = Integer.parseInt(txtIdCita.getText());
        fecha = jdcFechaCita.getDate();//obtiene la fecha del calendario
    //pero necesitamos convertirla para que la lea mysql
        long fecha2 = fecha.getTime();
        fechaCita = new java.sql.Date(fecha2);
        motivoCita = txtMotivoCita.getText();
        idPaciente = Integer.parseInt(txtIdPaciente.getText());
        if(txtMotivoCita.equals("")){
            JOptionPane.showMessageDialog(null, "Especifica el motivo de la cita");
            txtMotivoCita.requestFocusInWindow();
            return (validacion);
        }
        if(txtIdPaciente.equals("")){
            JOptionPane.showMessageDialog(null, "Especifica el id del paciente");
            txtIdPaciente.requestFocusInWindow();
            return (validacion);
        }
        return (true);
    }//fin del método validar

    /**
     * Imprime un mensaje de error personalizado para aquellos errores que son producidos por el acceso a la base de datos 
     * @param ex objeto de tipo DAOException
     */
    public void imprimirMensajeDeErrorDAO(DAOException ex){
        //si getMessage existe obtenemos su valor 
        String mensajeError;
        try{
            mensajeError = "Mensaje "+ ex.getCause().getMessage();  
        }catch(NullPointerException error){
            mensajeError = "";
        }   
        JOptionPane.showMessageDialog(null, ex.getMessage()+ "\n"+mensajeError,"Error",JOptionPane.ERROR_MESSAGE);
    }//fin del método imprimirMensajeDeErrorDAO
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtIdCita = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtIdPaciente = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtMotivoCita = new javax.swing.JTextField();
        btnNuevo = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        jdcFechaCita = new com.toedter.calendar.JDateChooser();
        jPanel1 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        txtBuscarPorId = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Llena los campos de la Cita"));

        jLabel3.setText("fecha de la Cita:");

        txtIdCita.setEditable(false);
        txtIdCita.setText("-1");

        jLabel6.setText("motivo de la Cita:");

        jLabel5.setText("id. Paciente:");

        jLabel2.setText("id. Cita:");

        btnNuevo.setText("Nueva");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        jdcFechaCita.setDateFormatString("yyyy-MM-dd");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(btnNuevo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnGuardar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnEliminar))
                            .addComponent(txtIdPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel6)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtIdCita, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMotivoCita, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jdcFechaCita, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtIdCita, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(15, 15, 15)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(jdcFechaCita, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtMotivoCita, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtIdPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 20, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNuevo)
                    .addComponent(btnGuardar)
                    .addComponent(btnEliminar))
                .addContainerGap())
        );

        jLabel8.setText("Id. Cita:");

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addComponent(txtBuscarPorId, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnBuscar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtBuscarPorId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(53, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        //llamamos al método limpiarFormulario
        limpiarFormulario();
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        //llamamos la método validar para ver si procede guardar la cita
        if(validar()){
            //si idCita =-1 entonces insertamos el registro
            if(idCita == -1){ 
                //llamamos al contructor para crear un ojeto de tipo Cita
                Cita miCita = new Cita(fechaCita, motivoCita, idPaciente);
                try{
                    manager.getCitaDAO().insertar(miCita);
                    txtIdCita.setText(Integer.toString(miCita.getNumeroCita()));
                    JOptionPane.showMessageDialog(null,"Los datos han sido guardados");
                }catch(DAOException ex){
                    imprimirMensajeDeErrorDAO(ex);   
                }//fin del catch
            }else{//si es diferente de -1 quiere decir que se esta realizando una modificación
                //llamamos al contructor para crear un ojeto de tipo Cita
                Cita miCita = new Cita(idCita, fechaCita, motivoCita, idPaciente);
                try{
                    manager.getCitaDAO().modificar(miCita);
                    txtIdCita.setText(Integer.toString(miCita.getNumeroCita()));
                    JOptionPane.showMessageDialog(null,"Los cambios han sido guardados");
                }catch(DAOException ex){
                    imprimirMensajeDeErrorDAO(ex);   
                }//fin del catch
            }//fin del else
        }//fin del if validar
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        //sólo se puede eliminar si el id Cita es diferente de -1
        if(!txtIdCita.getText().equals("-1")){
            int idCita = Integer.parseInt(txtIdCita.getText());
            int respuesta = JOptionPane.showConfirmDialog(null, "¿Deseas eliminar la cita relacionada con el id del Paciente = "+txtIdPaciente.getText()+"?" ,"confirmar",0);
            if(respuesta == 0){
                try{
                    //eliminamos la cita
                    manager.getCitaDAO().eliminar(idCita);
                    //si no ocurre una excepción
                    JOptionPane.showMessageDialog(null,"La cita ha sido eliminada");
                }catch(DAOException ex){
                    imprimirMensajeDeErrorDAO(ex);
                }//fin del catch
                limpiarFormulario();
            }else{
                JOptionPane.showMessageDialog(null,"Busca una cita para poder eliminarla");
            }//fin del else
        }//fin del if
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        try{
            //obtenemos el id de la receta a buscar
            int idBuscar =(Integer) Integer.parseInt(txtBuscarPorId.getText());
            //obtenemos los datos del autor y lo asignamos al objeto miCita
            Cita miCita = manager.getCitaDAO().obtener(idBuscar);
            //mostramos los datos  en la caja de texto
            txtIdCita.setText(Integer.toString(miCita.getNumeroCita()));
            String fechaString = miCita.getFechaCita().toString();//obtiene la fecha del Obj. miCita y lo convertimos a string 
            java.util.Date fecha2 = mySympleDateFormat.parse(fechaString);//despupes le asignamos el formato
            jdcFechaCita.setDate(fecha2);//luego lo asignamos al jDate con su método .setDate(Date fecha);
            txtMotivoCita.setText(miCita.getMotivoCita());
            txtIdPaciente.setText(Integer.toString(miCita.getIdPaciente()));
        }catch(NumberFormatException ex){
            JOptionPane.showMessageDialog(null,"Especifica un número entero", "Error", JOptionPane.ERROR_MESSAGE);
            txtBuscarPorId.requestFocusInWindow();
            txtBuscarPorId.selectAll();
        }catch(DAOException ex) {
            imprimirMensajeDeErrorDAO(ex);
        }   catch (ParseException ex) {
                Logger.getLogger(JDCita.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_btnBuscarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDCita.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDCita.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDCita.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDCita.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JDCita dialog = new JDCita(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnNuevo;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private com.toedter.calendar.JDateChooser jdcFechaCita;
    private javax.swing.JTextField txtBuscarPorId;
    private javax.swing.JTextField txtIdCita;
    private javax.swing.JTextField txtIdPaciente;
    private javax.swing.JTextField txtMotivoCita;
    // End of variables declaration//GEN-END:variables
}
